///<reference path="webgl.ts"/>
///<reference path="Math.ts"/>
///<reference path="Util.ts"/>
///<reference path="ContentManager.ts"/>
//<reference path="Terrain.ts"/>
//<reference path="Particle.ts"/>

let _programModel: WebGLProgram;

/*
class Technique
{
	Passes: any[];
}

class Effect
{
	Alpha: number;
	Passes: any[];
	Techniques: Effect[];
	CurrentTechnique: Technique;
	Parameters: any[];

	View: Mat4;
	World: Mat4;
	Projection: Mat4;
}

class BasicEffect extends Effect
{
	TextureEnabled: boolean;
	EnableDefaultLighting: boolean;
	PreferPerPixelLighting: boolean;
	VertexColorEnabled: boolean;

	DiffuseColor: Vec3;
	SpecularColor: Vec3;
	AmbientLightColor: Vec3;

	DirectionalLight0: any;
	DirectionalLight1: any;
	DirectionalLight2: any;

	FogEnabled: boolean;
	FogColor: Color;
	FogStart: number;
	FogEnd: number;
}
*/

class Mesh {
	//ParentBone: any;
	//Effects: Effect[];
	BoundingSphere: Sphere;
	Transformation: Mat4 | undefined;

	private _rgf: Float32Array;
	private _vb: WebGLBuffer | undefined;
	private _cVertices: number;

	constructor(rgVertices: number[][], rgFaces: number[][]) {
		const rgf = new Array<number>();

		const rgPos = new Array<Vec3>();

		let boundingSphere: Sphere | null = null;

		const cVertices = rgVertices.length;
		for (let iVertex = 0; iVertex < cVertices; ++iVertex) {
			const pos = Vec3.fromArray(rgVertices[iVertex]);
			rgPos.push(pos);

			const sphere = new Sphere(pos, 0);
			if (boundingSphere)
				boundingSphere = boundingSphere.add(sphere);
			else
				boundingSphere = sphere;
		}

		this.BoundingSphere = notNull(boundingSphere);

		const cFaces = rgFaces.length;
		for (let iFace = 0; iFace < cFaces; ++iFace) {
			const fd = rgFaces[iFace];
			const color = new Color(fd[3], fd[4], fd[5]);

			const plane = Plane3.fromPoints(rgPos[fd[0]], rgPos[fd[1]], rgPos[fd[2]]);
			const normal = plane.normal;

			for (let iv = 0; iv < 3; ++iv) {
				const iVertex = fd[iv];

				//aPosition: vec3
				rgPos[fd[iv]].pushTo(rgf);

				//aNormal: vec3
				normal.pushTo(rgf);

				//aColor: vec3
				color.pushFloat3To(rgf);
			}
		}

		this._rgf = new Float32Array(rgf);
		this._cVertices = cFaces * 3;
	}


	Draw() {
		let vb = this._vb;
		if (!vb) {
			vb = this._vb = notNull(gl.createBuffer());
			gl.bindBuffer(gl.ARRAY_BUFFER, vb);
			gl.bufferData(gl.ARRAY_BUFFER, this._rgf, gl.STATIC_DRAW);
		}

		gl.bindBuffer(gl.ARRAY_BUFFER, vb);
		gl.enableVertexAttribArray(_programModel["aPosition"]);
		gl.vertexAttribPointer(_programModel["aPosition"], 3, gl.FLOAT, false, 9 * 4, 0 * 3 * 4);
		gl.enableVertexAttribArray(_programModel["aNormal"]);
		gl.vertexAttribPointer(_programModel["aNormal"], 3, gl.FLOAT, false, 9 * 4, 1 * 3 * 4);
		gl.enableVertexAttribArray(_programModel["aColor"]);
		gl.vertexAttribPointer(_programModel["aColor"], 3, gl.FLOAT, false, 9 * 4, 2 * 3 * 4);

		gl.drawArrays(gl.TRIANGLES, 0, this._cVertices);
	}
}

class Model {
	constructor(public Name: string, public Meshes: Mesh[]) {
	}

	Draw(matView: Mat4, pos: Vec3, rot: Mat4, alpha: number) {
		gl.uniform1f(_programModel["xAlpha"], alpha);

		if (alpha === 1)
			gl.disable(gl.BLEND);
		else
			gl.enable(gl.BLEND);

		for (let iMesh = this.Meshes.length; iMesh--;) {
			const mesh = this.Meshes[iMesh];

			let matWorld = Mat4.createTranslation(pos).mul(rot);

			if (mesh.Transformation)
				matWorld = matWorld.mul(mesh.Transformation);

			const matWorldView = matView.mul(matWorld);
			const matNormal = matWorldView.toNormalMatrix();

			gl.uniformMatrix4fv(_programModel["xWorldView"], false, matWorldView.flatten());
			gl.uniformMatrix4fv(_programModel["xNormal"], false, matNormal.flatten());

			mesh.Draw();
		}
	}
}

class Models {
	static _mapModels: { [name: string]: Model };
	static _cctor = (() => {
		const rgModels = [
			new Model('Ally', [new Mesh([[0, 0, 0.875], [0.75, 0, 0], [0, 0.5, 0.375], [0, 0, 0.875], [0, 0.5, 0.375], [-0.75, 0, 0], [0, 0.5, -0.4375], [0.75, 0, 0], [0.875, 0, -0.875], [0, 0.5, -0.4375], [-0.875, 0, -0.875], [-0.75, 0, 0], [0, 0.5, 0.375], [0, 0.5, -0.4375], [-0.75, 0, 0], [0, 0.5, 0.375], [0.75, 0, 0], [0, 0.5, -0.4375], [-0.875, 0, -0.875], [0, 0.5, -0.4375], [0, -0.5, -0.5], [0, 0.5, -0.4375], [0.875, 0, -0.875], [0, -0.5, -0.5], [0.75, 0, 0], [0, -0.5, -0.5], [0.875, 0, -0.875], [-0.75, 0, 0], [-0.875, 0, -0.875], [0, -0.5, -0.5], [0, 0, 0.875], [0, -0.5, -0.5], [0.75, 0, 0], [0, 0, 0.875], [-0.75, 0, 0], [0, -0.5, -0.5]], [[0, 1, 2, 50, 200, 50], [3, 4, 5, 50, 200, 50], [6, 7, 8, 50, 100, 50], [9, 10, 11, 50, 100, 50], [12, 13, 14, 50, 150, 50], [15, 16, 17, 50, 150, 50], [18, 19, 20, 200, 50, 50], [21, 22, 23, 200, 50, 50], [24, 25, 26, 50, 150, 200], [27, 28, 29, 50, 150, 200], [30, 31, 32, 0, 200, 200], [33, 34, 35, 0, 200, 200]])]),
			new Model('Attractor', [new Mesh([[0, 0, 1.5], [0.25, 0.625, 0.25], [-0.25, 0.625, 0.25], [0, 0, -1.5], [-0.25, 0.625, -0.25], [0.25, 0.625, -0.25], [-1.5, 0, 0], [-0.25, 0.625, 0.25], [-0.25, 0.625, -0.25], [0.25, 0.625, 0.25], [1.5, 0, 0], [0.25, 0.625, -0.25], [-1.5, 0, 0], [0, 0, 1.5], [-0.25, 0.625, 0.25], [0, 0, 1.5], [1.5, 0, 0], [0.25, 0.625, 0.25], [1.5, 0, 0], [0, 0, -1.5], [0.25, 0.625, -0.25], [0, 0, -1.5], [-1.5, 0, 0], [-0.25, 0.625, -0.25], [-0.25, 0.625, 0.25], [0.25, 0.625, 0.25], [0.25, 0.625, -0.25], [0.25, 0.625, -0.25], [-0.25, 0.625, -0.25], [-0.25, 0.625, 0.25], [0, 0, 1.5], [0, -0.625, 0], [1.5, 0, 0], [1.5, 0, 0], [0, -0.625, 0], [0, 0, -1.5], [0, 0, -1.5], [0, -0.625, 0], [-1.5, 0, 0], [-1.5, 0, 0], [0, -0.625, 0], [0, 0, 1.5]], [[0, 1, 2, 200, 200, 200], [3, 4, 5, 200, 200, 200], [6, 7, 8, 200, 200, 200], [9, 10, 11, 200, 200, 200], [12, 13, 14, 200, 50, 50], [15, 16, 17, 200, 50, 50], [18, 19, 20, 200, 50, 50], [21, 22, 23, 200, 50, 50], [24, 25, 26, 200, 50, 200], [27, 28, 29, 200, 50, 200], [30, 31, 32, 250, 150, 0], [33, 34, 35, 200, 200, 0], [36, 37, 38, 250, 150, 0], [39, 40, 41, 200, 200, 0]])]),
			new Model('Bomber', [new Mesh([[0, 0, 0.875], [0.25, 0.375, -0.875], [-0.25, 0.375, -0.875], [0, 0, 0.875], [0.875, 0, -0.25], [0.25, 0.375, -0.875], [0, 0, 0.875], [-0.25, 0.375, -0.875], [-0.875, 0, -0.25], [-0.25, 0.375, -0.875], [0.25, 0.375, -0.875], [0, -0.375, -0.875], [-0.25, 0.375, -0.875], [0, -0.375, -0.875], [-0.875, 0, -0.25], [0.25, 0.375, -0.875], [0.875, 0, -0.25], [0, -0.375, -0.875], [-0.875, 0, -0.25], [0, -0.375, -0.875], [0, 0, 0.875], [0, -0.375, -0.875], [0.875, 0, -0.25], [0, 0, 0.875]], [[0, 1, 2, 50, 150, 200], [3, 4, 5, 0, 100, 200], [6, 7, 8, 0, 100, 200], [9, 10, 11, 200, 200, 0], [12, 13, 14, 0, 200, 200], [15, 16, 17, 0, 200, 200], [18, 19, 20, 200, 200, 0], [21, 22, 23, 200, 200, 0]])]),
			new Model('Cruiser', [new Mesh([[-1.5625, 0, -2.34375], [0, 1.5625, -2.34375], [-0.46875, 0.46875, -3.125], [-0.46875, 0.46875, -3.125], [0, 1.5625, -2.34375], [0.46875, 0.46875, -3.125], [0.46875, 0.46875, -3.125], [0, 1.5625, -2.34375], [1.5625, 0, -2.34375], [0.46875, 0.46875, -3.125], [1.5625, 0, -2.34375], [0.46875, -0.46875, -3.125], [0.46875, -0.46875, -3.125], [1.5625, 0, -2.34375], [0, -1.5625, -2.34375], [-0.46875, -0.46875, -3.125], [0.46875, -0.46875, -3.125], [0, -1.5625, -2.34375], [-1.5625, 0, -2.34375], [-0.46875, -0.46875, -3.125], [0, -1.5625, -2.34375], [-1.5625, 0, -2.34375], [-0.46875, 0.46875, -3.125], [-0.46875, -0.46875, -3.125], [-1.171875, 0, 3.125], [0, 1.171875, 3.125], [0, 2.34375, 0.78125], [0, 1.171875, 3.125], [1.171875, 0, 3.125], [0, 2.34375, 0.78125], [-1.171875, 0, 3.125], [0, 2.34375, 0.78125], [-0.78125, 2.34375, 0], [-0.78125, 2.34375, 0], [-3.125, 0, 0.78125], [-1.171875, 0, 3.125], [1.171875, 0, 3.125], [3.125, 0, 0.78125], [0.78125, 2.34375, 0], [0.78125, 2.34375, 0], [0, 2.34375, 0.78125], [1.171875, 0, 3.125], [0, 3.125, 0], [0, 2.34375, 0.78125], [0.78125, 2.34375, 0], [0, 3.125, 0], [0.78125, 2.34375, 0], [0, 1.5625, -2.34375], [0, 3.125, 0], [0, 1.5625, -2.34375], [-0.78125, 2.34375, 0], [0, 3.125, 0], [-0.78125, 2.34375, 0], [0, 2.34375, 0.78125], [-3.125, 0, 0.78125], [-0.78125, 2.34375, 0], [-3.125, 0, -3.125], [0.78125, 2.34375, 0], [3.125, 0, 0.78125], [3.125, 0, -3.125], [-0.78125, 2.34375, 0], [0, 1.5625, -2.34375], [-1.5625, 0, -2.34375], [-1.5625, 0, -2.34375], [-3.125, 0, -3.125], [-0.78125, 2.34375, 0], [0.78125, 2.34375, 0], [3.125, 0, -3.125], [1.5625, 0, -2.34375], [1.5625, 0, -2.34375], [0, 1.5625, -2.34375], [0.78125, 2.34375, 0], [0, 0.625, 1.171875], [-0.625, 0, 1.171875], [0, -0.625, 1.171875], [0, -0.625, 1.171875], [0.625, 0, 1.171875], [0, 0.625, 1.171875], [0, 1.171875, 3.125], [-1.171875, 0, 3.125], [-0.625, 0, 1.171875], [-0.625, 0, 1.171875], [0, 0.625, 1.171875], [0, 1.171875, 3.125], [-0.625, 0, 1.171875], [-1.171875, 0, 3.125], [0, -1.171875, 3.125], [0, -1.171875, 3.125], [0, -0.625, 1.171875], [-0.625, 0, 1.171875], [0.625, 0, 1.171875], [0, -0.625, 1.171875], [0, -1.171875, 3.125], [0, -1.171875, 3.125], [1.171875, 0, 3.125], [0.625, 0, 1.171875], [1.171875, 0, 3.125], [0, 1.171875, 3.125], [0, 0.625, 1.171875], [0, 0.625, 1.171875], [0.625, 0, 1.171875], [1.171875, 0, 3.125], [1.171875, 0, 3.125], [0, -1.171875, 3.125], [0, -3.125, 0], [0, -1.171875, 3.125], [-1.171875, 0, 3.125], [0, -3.125, 0], [0, -3.125, 0], [-1.171875, 0, 3.125], [-3.125, 0, 0.78125], [3.125, 0, 0.78125], [1.171875, 0, 3.125], [0, -3.125, 0], [3.125, 0, -3.125], [3.125, 0, 0.78125], [0, -3.125, 0], [0, -3.125, 0], [-3.125, 0, 0.78125], [-3.125, 0, -3.125], [0, -3.125, 0], [-3.125, 0, -3.125], [-1.5625, 0, -2.34375], [0, -3.125, 0], [1.5625, 0, -2.34375], [3.125, 0, -3.125], [0, -3.125, 0], [-1.5625, 0, -2.34375], [0, -1.5625, -2.34375], [0, -3.125, 0], [0, -1.5625, -2.34375], [1.5625, 0, -2.34375], [-0.46875, 0.46875, -3.125], [0.46875, 0.46875, -3.125], [0.46875, -0.46875, -3.125], [0.46875, -0.46875, -3.125], [-0.46875, -0.46875, -3.125], [-0.46875, 0.46875, -3.125]], [[0, 1, 2, 100, 100, 100], [3, 4, 5, 75, 75, 75], [6, 7, 8, 100, 100, 100], [9, 10, 11, 75, 75, 75], [12, 13, 14, 100, 100, 100], [15, 16, 17, 75, 75, 75], [18, 19, 20, 100, 100, 100], [21, 22, 23, 75, 75, 75], [24, 25, 26, 200, 200, 200], [27, 28, 29, 200, 200, 200], [30, 31, 32, 50, 50, 200], [33, 34, 35, 50, 50, 200], [36, 37, 38, 50, 50, 200], [39, 40, 41, 50, 50, 200], [42, 43, 44, 200, 50, 50], [45, 46, 47, 0, 200, 200], [48, 49, 50, 0, 200, 200], [51, 52, 53, 200, 50, 50], [54, 55, 56, 200, 50, 200], [57, 58, 59, 200, 50, 200], [60, 61, 62, 150, 150, 150], [63, 64, 65, 0, 100, 200], [66, 67, 68, 0, 100, 200], [69, 70, 71, 150, 150, 150], [72, 73, 74, 0, 0, 0], [75, 76, 77, 0, 0, 0], [78, 79, 80, 50, 50, 50], [81, 82, 83, 50, 50, 50], [84, 85, 86, 75, 75, 75], [87, 88, 89, 75, 75, 75], [90, 91, 92, 50, 50, 50], [93, 94, 95, 50, 50, 50], [96, 97, 98, 75, 75, 75], [99, 100, 101, 75, 75, 75], [102, 103, 104, 200, 200, 0], [105, 106, 107, 200, 200, 0], [108, 109, 110, 250, 150, 0], [111, 112, 113, 250, 150, 0], [114, 115, 116, 200, 200, 0], [117, 118, 119, 200, 200, 0], [120, 121, 122, 250, 150, 0], [123, 124, 125, 250, 150, 0], [126, 127, 128, 200, 200, 0], [129, 130, 131, 200, 200, 0], [132, 133, 134, 200, 50, 200], [135, 136, 137, 200, 50, 200]])]),
			new Model('Destroyer', [new Mesh([[-0.375, 0, 0.875], [0, 0.25, 0.125], [-0.25, 0.25, -0.125], [0, 0.25, 0.125], [0.375, 0, 0.875], [0.25, 0.25, -0.125], [-0.875, 0, -0.375], [-0.25, 0.25, -0.125], [0, 0, -0.875], [0, 0, -0.875], [0.25, 0.25, -0.125], [0.875, 0, -0.375], [-0.375, 0, 0.875], [-0.25, 0.25, -0.125], [-0.875, 0, -0.375], [0.25, 0.25, -0.125], [0.375, 0, 0.875], [0.875, 0, -0.375], [-0.25, 0.25, -0.125], [0, 0.5, -0.125], [0, 0, -0.875], [0, 0.5, -0.125], [0.25, 0.25, -0.125], [0, 0, -0.875], [-0.25, 0.25, -0.125], [0, 0.25, 0.125], [0, 0.5, -0.125], [0, 0.5, -0.125], [0, 0.25, 0.125], [0.25, 0.25, -0.125], [0, 0.25, 0.125], [-0.375, 0, 0.875], [0, -0.25, 0.125], [0.375, 0, 0.875], [0, 0.25, 0.125], [0, -0.25, 0.125], [0, -0.25, 0.125], [-0.25, -0.25, -0.125], [0, -0.5, -0.125], [0, -0.25, 0.125], [0, -0.5, -0.125], [0.25, -0.25, -0.125], [0, -0.5, -0.125], [-0.25, -0.25, -0.125], [0, 0, -0.875], [0, -0.5, -0.125], [0, 0, -0.875], [0.25, -0.25, -0.125], [-0.25, -0.25, -0.125], [0, -0.25, 0.125], [-0.375, 0, 0.875], [0, -0.25, 0.125], [0.25, -0.25, -0.125], [0.375, 0, 0.875], [-0.25, -0.25, -0.125], [-0.875, 0, -0.375], [0, 0, -0.875], [0.25, -0.25, -0.125], [0, 0, -0.875], [0.875, 0, -0.375], [-0.25, -0.25, -0.125], [-0.375, 0, 0.875], [-0.875, 0, -0.375], [0.25, -0.25, -0.125], [0.875, 0, -0.375], [0.375, 0, 0.875]], [[0, 1, 2, 200, 50, 50], [3, 4, 5, 200, 50, 50], [6, 7, 8, 200, 50, 50], [9, 10, 11, 200, 50, 50], [12, 13, 14, 0, 200, 200], [15, 16, 17, 0, 200, 200], [18, 19, 20, 0, 100, 200], [21, 22, 23, 0, 100, 200], [24, 25, 26, 50, 200, 50], [27, 28, 29, 50, 200, 50], [30, 31, 32, 75, 75, 75], [33, 34, 35, 75, 75, 75], [36, 37, 38, 200, 200, 0], [39, 40, 41, 200, 200, 0], [42, 43, 44, 200, 200, 0], [45, 46, 47, 200, 200, 0], [48, 49, 50, 150, 25, 25], [51, 52, 53, 150, 25, 25], [54, 55, 56, 150, 25, 25], [57, 58, 59, 150, 25, 25], [60, 61, 62, 0, 125, 125], [63, 64, 65, 0, 125, 125]])]),
			new Model('Drone', [new Mesh([[0, 0, 0.875], [0.625, 0, 0.125], [0, 0.375, -0.25], [0, 0, 0.875], [0, 0.375, -0.25], [-0.625, 0, 0.125], [0, 0.375, -0.25], [0.625, 0, -0.625], [0, 0.375, -0.875], [0, 0.375, -0.25], [0, 0.375, -0.875], [-0.625, 0, -0.625], [-0.625, 0, 0.125], [0, 0.375, -0.25], [-0.625, 0, -0.625], [0, 0.375, -0.25], [0.625, 0, 0.125], [0.625, 0, -0.625], [-0.625, 0, -0.625], [0, 0.375, -0.875], [0, -0.375, -0.875], [0, 0.375, -0.875], [0.625, 0, -0.625], [0, -0.375, -0.875], [0, 0, 0.875], [0.625, 0, -0.625], [0.625, 0, 0.125], [0, 0, 0.875], [-0.625, 0, 0.125], [-0.625, 0, -0.625], [0, 0, 0.875], [0, -0.375, -0.875], [0.625, 0, -0.625], [0, 0, 0.875], [-0.625, 0, -0.625], [0, -0.375, -0.875]], [[0, 1, 2, 100, 75, 50], [3, 4, 5, 100, 75, 50], [6, 7, 8, 100, 75, 50], [9, 10, 11, 100, 75, 50], [12, 13, 14, 200, 50, 50], [15, 16, 17, 200, 50, 50], [18, 19, 20, 150, 75, 50], [21, 22, 23, 150, 75, 50], [24, 25, 26, 150, 75, 50], [27, 28, 29, 150, 75, 50], [30, 31, 32, 200, 200, 0], [33, 34, 35, 200, 200, 0]])]),
			new Model('Elite', [new Mesh([[-0.375, 0, 0.9375], [0, 0.375, 0.9375], [0, 0.5625, 0.375], [0, 0.375, 0.9375], [0.375, 0, 0.9375], [0, 0.5625, 0.375], [0, 0.5625, 0.375], [0.375, 0, 0.9375], [0.9375, 0, 0], [0.9375, 0, 0], [0.375, 0.5625, -0.375], [0, 0.5625, 0.375], [-0.375, 0, 0.9375], [0, 0.5625, 0.375], [-0.375, 0.5625, -0.375], [-0.375, 0.5625, -0.375], [-0.9375, 0, 0], [-0.375, 0, 0.9375], [0, 0.5625, 0.375], [0.375, 0.5625, -0.375], [0, 0.9375, 0], [-0.375, 0.5625, -0.375], [0, 0.5625, 0.375], [0, 0.9375, 0], [-0.375, 0.5625, -0.375], [0, 0.9375, 0], [0, 0.5625, -0.9375], [0, 0.9375, 0], [0.375, 0.5625, -0.375], [0, 0.5625, -0.9375], [-0.9375, 0, 0], [-0.375, 0.5625, -0.375], [-0.9375, 0, -0.75], [0.375, 0.5625, -0.375], [0.9375, 0, 0], [0.9375, 0, -0.75], [-0.375, 0.5625, -0.375], [0, 0.5625, -0.9375], [-0.9375, 0, -0.75], [0.375, 0.5625, -0.375], [0.9375, 0, -0.75], [0, 0.5625, -0.9375], [0, 0.375, 0.9375], [-0.375, 0, 0.9375], [0, -0.375, 0.9375], [0, -0.375, 0.9375], [0.375, 0, 0.9375], [0, 0.375, 0.9375], [-0.9375, 0, -0.75], [0, 0.5625, -0.9375], [0, -0.5625, -0.9375], [0, 0.5625, -0.9375], [0.9375, 0, -0.75], [0, -0.5625, -0.9375], [-0.9375, 0, -0.75], [0, -0.5625, -0.9375], [-0.9375, 0, 0], [0, -0.5625, -0.9375], [0.9375, 0, -0.75], [0.9375, 0, 0], [0, -0.5625, -0.9375], [0, -0.9375, 0], [-0.9375, 0, 0], [0, -0.5625, -0.9375], [0.9375, 0, 0], [0, -0.9375, 0], [0, -0.9375, 0], [0, -0.375, 0.9375], [-0.375, 0, 0.9375], [0, -0.9375, 0], [0.375, 0, 0.9375], [0, -0.375, 0.9375], [-0.9375, 0, 0], [0, -0.9375, 0], [-0.375, 0, 0.9375], [0, -0.9375, 0], [0.9375, 0, 0], [0.375, 0, 0.9375]], [[0, 1, 2, 150, 150, 150], [3, 4, 5, 150, 150, 150], [6, 7, 8, 150, 50, 200], [9, 10, 11, 150, 50, 200], [12, 13, 14, 150, 50, 200], [15, 16, 17, 150, 50, 200], [18, 19, 20, 200, 50, 50], [21, 22, 23, 200, 50, 50], [24, 25, 26, 100, 100, 100], [27, 28, 29, 100, 100, 100], [30, 31, 32, 100, 100, 100], [33, 34, 35, 100, 100, 100], [36, 37, 38, 150, 150, 150], [39, 40, 41, 150, 150, 150], [42, 43, 44, 75, 75, 75], [45, 46, 47, 75, 75, 75], [48, 49, 50, 200, 50, 50], [51, 52, 53, 200, 50, 50], [54, 55, 56, 75, 25, 100], [57, 58, 59, 75, 25, 100], [60, 61, 62, 105, 35, 140], [63, 64, 65, 105, 35, 140], [66, 67, 68, 100, 100, 100], [69, 70, 71, 100, 100, 100], [72, 73, 74, 75, 25, 100], [75, 76, 77, 75, 25, 100]])]),
			new Model('Fighter', [new Mesh([[0, 0, 0.875], [0.75, 0, 0], [0, 0.5, 0.25], [0, 0, 0.875], [0, 0.5, 0.25], [-0.75, 0, 0], [0, 0.5, -0.4375], [0.75, 0, 0], [0.875, 0, -0.875], [0, 0.5, -0.4375], [-0.875, 0, -0.875], [-0.75, 0, 0], [0, 0.5, 0.25], [0, 0.5, -0.4375], [-0.75, 0, 0], [0, 0.5, 0.25], [0.75, 0, 0], [0, 0.5, -0.4375], [-0.875, 0, -0.875], [0, 0.5, -0.4375], [0, -0.4375, -0.5], [0, 0.5, -0.4375], [0.875, 0, -0.875], [0, -0.4375, -0.5], [0.75, 0, 0], [0, -0.4375, -0.5], [0.875, 0, -0.875], [-0.75, 0, 0], [-0.875, 0, -0.875], [0, -0.4375, -0.5], [0, 0, 0.875], [0, -0.4375, -0.5], [0.75, 0, 0], [0, 0, 0.875], [-0.75, 0, 0], [0, -0.4375, -0.5]], [[0, 1, 2, 150, 75, 50], [3, 4, 5, 150, 75, 50], [6, 7, 8, 200, 50, 50], [9, 10, 11, 200, 50, 50], [12, 13, 14, 100, 75, 30], [15, 16, 17, 100, 75, 30], [18, 19, 20, 200, 200, 200], [21, 22, 23, 200, 200, 200], [24, 25, 26, 150, 75, 50], [27, 28, 29, 150, 75, 50], [30, 31, 32, 250, 150, 0], [33, 34, 35, 250, 150, 0]])]),
			new Model('Generator', [new Mesh([[-0.9375, 0, 1.875], [0, 0.9375, 1.875], [0, 1.25, 0.625], [0, 0.9375, 1.875], [0.9375, 0, 1.875], [0, 1.25, 0.625], [-0.9375, 0, 1.875], [0, 1.25, 0.625], [-0.625, 1.25, 0], [-0.625, 1.25, 0], [-1.875, 0, 0.625], [-0.9375, 0, 1.875], [0.9375, 0, 1.875], [1.875, 0, 0.625], [0.625, 1.25, 0], [0.625, 1.25, 0], [0, 1.25, 0.625], [0.9375, 0, 1.875], [0, 1.25, 0.625], [0.625, 1.25, 0], [0, 1.25, -0.625], [0, 1.25, -0.625], [-0.625, 1.25, 0], [0, 1.25, 0.625], [-1.875, 0, 0.625], [-0.625, 1.25, 0], [-1.875, 0, -0.625], [0.625, 1.25, 0], [1.875, 0, 0.625], [1.875, 0, -0.625], [0, 1.25, -0.625], [0.625, 0, -1.875], [-0.625, 0, -1.875], [-0.625, 1.25, 0], [0, 1.25, -0.625], [-0.625, 0, -1.875], [-0.625, 0, -1.875], [-1.875, 0, -0.625], [-0.625, 1.25, 0], [0.625, 1.25, 0], [1.875, 0, -0.625], [0.625, 0, -1.875], [0.625, 0, -1.875], [0, 1.25, -0.625], [0.625, 1.25, 0], [0, 0.5, 0.9375], [-0.5, 0, 0.9375], [0, -0.5, 0.9375], [0, -0.5, 0.9375], [0.5, 0, 0.9375], [0, 0.5, 0.9375], [0, 0.9375, 1.875], [-0.9375, 0, 1.875], [-0.5, 0, 0.9375], [-0.5, 0, 0.9375], [0, 0.5, 0.9375], [0, 0.9375, 1.875], [-0.5, 0, 0.9375], [-0.9375, 0, 1.875], [0, -0.9375, 1.875], [0, -0.9375, 1.875], [0, -0.5, 0.9375], [-0.5, 0, 0.9375], [0.5, 0, 0.9375], [0, -0.5, 0.9375], [0, -0.9375, 1.875], [0, -0.9375, 1.875], [0.9375, 0, 1.875], [0.5, 0, 0.9375], [0.9375, 0, 1.875], [0, 0.9375, 1.875], [0, 0.5, 0.9375], [0, 0.5, 0.9375], [0.5, 0, 0.9375], [0.9375, 0, 1.875], [0.9375, 0, 1.875], [0, -0.9375, 1.875], [0, -1.25, 0], [0, -0.9375, 1.875], [-0.9375, 0, 1.875], [0, -1.25, 0], [0, -1.25, 0], [-0.9375, 0, 1.875], [-1.875, 0, 0.625], [1.875, 0, 0.625], [0.9375, 0, 1.875], [0, -1.25, 0], [1.875, 0, -0.625], [1.875, 0, 0.625], [0, -1.25, 0], [0, -1.25, 0], [-1.875, 0, 0.625], [-1.875, 0, -0.625], [0, -1.25, 0], [-1.875, 0, -0.625], [-0.625, 0, -1.875], [0, -1.25, 0], [0.625, 0, -1.875], [1.875, 0, -0.625], [0, -1.25, 0], [-0.625, 0, -1.875], [0.625, 0, -1.875]], [[0, 1, 2, 200, 200, 200], [3, 4, 5, 200, 200, 200], [6, 7, 8, 50, 50, 200], [9, 10, 11, 50, 50, 200], [12, 13, 14, 50, 50, 200], [15, 16, 17, 50, 50, 200], [18, 19, 20, 200, 50, 50], [21, 22, 23, 200, 50, 50], [24, 25, 26, 200, 50, 200], [27, 28, 29, 200, 50, 200], [30, 31, 32, 0, 200, 200], [33, 34, 35, 0, 100, 200], [36, 37, 38, 0, 100, 200], [39, 40, 41, 0, 100, 200], [42, 43, 44, 0, 100, 200], [45, 46, 47, 0, 0, 0], [48, 49, 50, 0, 0, 0], [51, 52, 53, 50, 50, 50], [54, 55, 56, 50, 50, 50], [57, 58, 59, 75, 75, 75], [60, 61, 62, 75, 75, 75], [63, 64, 65, 50, 50, 50], [66, 67, 68, 50, 50, 50], [69, 70, 71, 75, 75, 75], [72, 73, 74, 75, 75, 75], [75, 76, 77, 200, 200, 0], [78, 79, 80, 200, 200, 0], [81, 82, 83, 250, 150, 0], [84, 85, 86, 250, 150, 0], [87, 88, 89, 200, 200, 0], [90, 91, 92, 200, 200, 0], [93, 94, 95, 250, 150, 0], [96, 97, 98, 250, 150, 0], [99, 100, 101, 200, 200, 0]])]),
			new Model('Hoverplane', [new Mesh([[0, 0.4375, -0.25], [-0.375, -0.4375, 0.875], [0.375, -0.4375, 0.875], [0, 0.4375, -0.25], [0.375, -0.4375, 0.875], [0.875, 0, -0.25], [0, 0.4375, -0.25], [-0.875, 0, -0.25], [-0.375, -0.4375, 0.875], [0, 0.4375, -0.25], [0.875, 0, -0.25], [0, -0.4375, -0.875], [0, 0.4375, -0.25], [0, -0.4375, -0.875], [-0.875, 0, -0.25], [0, -0.4375, -0.875], [0.375, -0.4375, 0.875], [-0.375, -0.4375, 0.875], [0, -0.4375, -0.875], [-0.375, -0.4375, 0.875], [-0.875, 0, -0.25], [0, -0.4375, -0.875], [0.875, 0, -0.25], [0.375, -0.4375, 0.875], [0.1875, -0.438749998807907, 0.1875], [-0.1875, -0.438749998807907, 0.1875], [0, -0.438749998807907, -0.1875]], [[0, 1, 2, 50, 200, 50], [3, 4, 5, 50, 100, 50], [6, 7, 8, 50, 100, 50], [9, 10, 11, 50, 150, 50], [12, 13, 14, 50, 150, 50], [15, 16, 17, 50, 150, 200], [18, 19, 20, 0, 200, 200], [21, 22, 23, 0, 200, 200], [24, 25, 26, 200, 200, 0]])]),
			new Model('Missile', [new Mesh([[3.86357754678102E-08, -3.86357754678102E-08, 0.625], [0.132582515478134, 0.132582515478134, -0.625], [0.132582515478134, -0.132582515478134, -0.625], [3.86357754678102E-08, -3.86357754678102E-08, 0.625], [0.132582515478134, -0.132582515478134, -0.625], [-0.132582530379295, -0.132582500576973, -0.625], [3.86357754678102E-08, -3.86357754678102E-08, 0.625], [-0.132582530379295, -0.132582500576973, -0.625], [-0.132582515478134, 0.132582515478134, -0.625], [3.86357754678102E-08, -3.86357754678102E-08, 0.625], [-0.132582515478134, 0.132582515478134, -0.625], [0.132582545280457, 0.132582485675812, -0.625], [-0.132582515478134, -0.132582515478134, -0.625], [0.132582515478134, -0.132582515478134, -0.625], [0.132582515478134, 0.132582515478134, -0.625], [-0.132582515478134, 0.132582515478134, -0.625], [0.0662912800908089, 0.0662912353873253, 0], [0.220970883965492, 0.22097085416317, -0.375], [0.132582515478134, 0.132582515478134, -0.625], [0.0662912800908089, -0.0662912800908089, 0], [0.22097085416317, -0.220970883965492, -0.375], [0.132582515478134, -0.132582515478134, -0.625], [-0.0662912428379059, -0.0662912726402283, 0], [-0.220970883965492, -0.22097085416317, -0.375], [-0.132582530379295, -0.132582500576973, -0.625], [-0.0662912353873253, 0.0662912353873253, 0], [-0.220970869064331, 0.220970869064331, -0.375], [-0.132582515478134, 0.132582515478134, -0.625], [0, 0, -0.625]], [[2, 1, 0, 150, 150, 150], [5, 4, 3, 200, 200, 200], [8, 7, 6, 150, 150, 150], [11, 10, 9, 200, 200, 200], [14, 13, 12, 150, 150, 0], [12, 15, 14, 150, 150, 0], [16, 17, 18, 200, 50, 50], [18, 17, 16, 200, 50, 50], [19, 20, 21, 200, 50, 50], [21, 20, 19, 200, 50, 50], [22, 23, 24, 200, 50, 50], [24, 23, 22, 200, 50, 50], [25, 26, 27, 200, 50, 50], [27, 26, 25, 200, 50, 50]])]),
			new Model('Monster', [new Mesh([[0, 0.625, 1.09375], [0.46875, 0.3125, 0.3125], [0, 0.9375, 0.3125], [0, 0.625, 1.09375], [0, 0.9375, 0.3125], [-0.46875, 0.3125, 0.3125], [0, 0.9375, 0.3125], [0.46875, 0.3125, 0.3125], [0, 0, -1.09375], [-0.46875, 0.3125, 0.3125], [0, 0.9375, 0.3125], [0, 0, -1.09375], [-0.46875, 0.3125, 0.3125], [-0.234375, 0.234375, -0.390625], [-0.9375, 0, 0], [0.46875, 0.3125, 0.3125], [0.9375, 0, 0], [0.234375, 0.234375, -0.390625], [-0.46875, 0.3125, 0.3125], [0.46875, 0.3125, 0.3125], [0, 0.625, 1.09375], [-0.46875, 0.3125, 0.3125], [0, 0, 1.09375], [0.46875, 0.3125, 0.3125], [0, 0, 1.09375], [-0.46875, 0.3125, 0.3125], [0, 0, -1.09375], [0, 0, 1.09375], [0, 0, -1.09375], [0.46875, 0.3125, 0.3125], [0, 0.9375, 0.3125], [0, 1.25, 0], [0, 0.625, -0.15625], [0, 0.625, -0.15625], [0, 0.625, -0.46875], [0, 0.3125, -0.625], [0, 0.3125, -0.625], [0, 0.625, -1.09375], [0, 0, -1.09375]], [[0, 1, 2, 0, 200, 175], [3, 4, 5, 0, 200, 175], [6, 7, 8, 0, 200, 100], [9, 10, 11, 0, 200, 100], [12, 13, 14, 0, 150, 50], [15, 16, 17, 0, 150, 50], [18, 19, 20, 170, 65, 65], [21, 22, 23, 200, 50, 50], [24, 25, 26, 50, 100, 150], [27, 28, 29, 50, 100, 150], [30, 31, 32, 0, 150, 50], [32, 31, 30, 0, 150, 50], [33, 34, 35, 0, 150, 50], [35, 34, 33, 0, 150, 50], [36, 37, 38, 0, 200, 175], [38, 37, 36, 0, 200, 175]])]),
			new Model('Mutant', [new Mesh([[0, 0, 0.875], [0.625, 0, 0.125], [0, 0.375, -0.25], [0, 0, 0.875], [0, 0.375, -0.25], [-0.625, 0, 0.125], [0, 0.375, -0.25], [0.625, 0, -0.625], [0, 0.375, -0.875], [0, 0.375, -0.25], [0, 0.375, -0.875], [-0.625, 0, -0.625], [-0.625, 0, 0.125], [0, 0.375, -0.25], [-0.625, 0, -0.625], [0, 0.375, -0.25], [0.625, 0, 0.125], [0.625, 0, -0.625], [-0.625, 0, -0.625], [0, 0.375, -0.875], [0, -0.375, -0.875], [0, 0.375, -0.875], [0.625, 0, -0.625], [0, -0.375, -0.875], [0, 0, 0.875], [0.625, 0, -0.625], [0.625, 0, 0.125], [0, 0, 0.875], [-0.625, 0, 0.125], [-0.625, 0, -0.625], [0, 0, 0.875], [0, -0.375, -0.875], [0.625, 0, -0.625], [0, 0, 0.875], [-0.625, 0, -0.625], [0, -0.375, -0.875]], [[0, 1, 2, 200, 50, 200], [3, 4, 5, 200, 50, 200], [6, 7, 8, 200, 50, 200], [9, 10, 11, 200, 50, 200], [12, 13, 14, 0, 100, 200], [15, 16, 17, 0, 100, 200], [18, 19, 20, 200, 50, 50], [21, 22, 23, 200, 50, 50], [24, 25, 26, 200, 100, 200], [27, 28, 29, 200, 100, 200], [30, 31, 32, 200, 200, 0], [33, 34, 35, 200, 200, 0]])]),
			new Model('Mystery', [new Mesh([[-0.375, 0.375, -0.65625], [0.375, 0.375, -0.65625], [0, 0, -0.65625], [0.375, 0.375, 0.65625], [-0.375, 0.375, 0.65625], [0, 0, 0.375], [-0.375, 0.375, 0.65625], [0.375, 0.375, 0.65625], [0.375, 0.375, -0.65625], [0.375, 0.375, -0.65625], [-0.375, 0.375, -0.65625], [-0.375, 0.375, 0.65625], [-0.875, -0.375, 0.65625], [-0.375, 0.375, 0.65625], [-0.375, 0.375, -0.65625], [0.375, 0.375, 0.65625], [0.875, -0.375, 0.65625], [0.375, 0.375, -0.65625], [-0.875, -0.375, 0.65625], [-0.375, 0.375, -0.65625], [-0.875, -0.375, -0.65625], [0.875, -0.375, 0.65625], [0.875, -0.375, -0.65625], [0.375, 0.375, -0.65625], [0, 0, -0.65625], [0.375, 0.375, -0.65625], [0.875, -0.375, -0.65625], [-0.875, -0.375, -0.65625], [-0.375, 0.375, -0.65625], [0, 0, -0.65625], [0.875, -0.375, 0.65625], [0.375, 0.375, 0.65625], [0, 0, 0.375], [0, 0, 0.375], [-0.375, 0.375, 0.65625], [-0.875, -0.375, 0.65625], [-0.875, -0.375, -0.65625], [0, 0, -0.65625], [0, 0, 0.375], [0, 0, 0.375], [-0.875, -0.375, 0.65625], [-0.875, -0.375, -0.65625], [0, 0, -0.65625], [0.875, -0.375, -0.65625], [0.875, -0.375, 0.65625], [0.875, -0.375, 0.65625], [0, 0, 0.375], [0, 0, -0.65625], [-0.1875, 0.328125, -0.657187521457672], [-0.0625, 0.328125, -0.657187521457672], [-0.0625, 0.234375, -0.657187521457672], [-0.0625, 0.234375, -0.657187521457672], [-0.1875, 0.234375, -0.657187521457672], [-0.1875, 0.328125, -0.657187521457672], [0.0625, 0.328125, -0.657187521457672], [0.1875, 0.328125, -0.657187521457672], [0.1875, 0.234375, -0.657187521457672], [0.1875, 0.234375, -0.657187521457672], [0.0625, 0.234375, -0.657187521457672], [0.0625, 0.328125, -0.657187521457672]], [[0, 1, 2, 200, 200, 200], [3, 4, 5, 200, 200, 200], [6, 7, 8, 150, 150, 150], [9, 10, 11, 150, 150, 150], [12, 13, 14, 75, 75, 75], [15, 16, 17, 75, 75, 75], [18, 19, 20, 100, 100, 100], [21, 22, 23, 100, 100, 100], [24, 25, 26, 150, 150, 150], [27, 28, 29, 150, 150, 150], [30, 31, 32, 150, 150, 150], [33, 34, 35, 150, 150, 150], [36, 37, 38, 200, 200, 0], [39, 40, 41, 200, 200, 0], [42, 43, 44, 200, 200, 0], [45, 46, 47, 200, 200, 0], [48, 49, 50, 200, 50, 50], [51, 52, 53, 200, 50, 50], [54, 55, 56, 200, 50, 50], [57, 58, 59, 200, 50, 50]])]),
			new Model('Pest', [new Mesh([[0, 0, 0.625], [0.625, 0, 0], [0, 0.625, 0], [-0.625, 0, 0], [0, 0.625, 0], [0, 0, -0.625], [0.625, 0, 0], [0, 0, -0.625], [0, 0.625, 0], [0, 0, 0.625], [0, 0.625, 0], [-0.625, 0, 0], [0, -0.625, 0], [0.625, 0, 0], [0, 0, 0.625], [0, -0.625, 0], [-0.625, 0, 0], [0, 0, -0.625], [0, -0.625, 0], [0, 0, 0.625], [-0.625, 0, 0], [0, -0.625, 0], [0, 0, -0.625], [0.625, 0, 0]], [[0, 1, 2, 200, 200, 0], [3, 4, 5, 200, 200, 0], [6, 7, 8, 200, 50, 200], [9, 10, 11, 200, 50, 200], [12, 13, 14, 200, 50, 200], [15, 16, 17, 200, 50, 200], [18, 19, 20, 200, 200, 0], [21, 22, 23, 200, 200, 0]])]),
			new Model('Repulsor', [new Mesh([[-0.189999997615814, 0, 1.07718753814697], [0.189999997615814, 0, 1.07718753814697], [0, 0.46875, 0.46875], [1.02781248092651, 0, -0.37406250834465], [0.837812483310699, 0, -0.703125], [0.46875, 0.46875, -0.234375], [-0.837812483310699, 0, -0.703125], [-1.02781248092651, 0, -0.37406250834465], [-0.46875, 0.46875, -0.234375], [0.189999997615814, 0, 1.07718753814697], [1.02781248092651, 0, -0.37406250834465], [0.46875, 0.46875, -0.234375], [0.46875, 0.46875, -0.234375], [0, 0.46875, 0.46875], [0.189999997615814, 0, 1.07718753814697], [0.46875, 0.46875, -0.234375], [0.837812483310699, 0, -0.703125], [-0.837812483310699, 0, -0.703125], [-0.837812483310699, 0, -0.703125], [-0.46875, 0.46875, -0.234375], [0.46875, 0.46875, -0.234375], [-1.02781248092651, 0, -0.37406250834465], [-0.189999997615814, 0, 1.07718753814697], [0, 0.46875, 0.46875], [0, 0.46875, 0.46875], [-0.46875, 0.46875, -0.234375], [-1.02781248092651, 0, -0.37406250834465], [0, 0.46875, 0.46875], [0.46875, 0.46875, -0.234375], [-0.46875, 0.46875, -0.234375], [0.189999997615814, 0, 1.07718753814697], [-0.189999997615814, 0, 1.07718753814697], [0, -0.46875, 0], [1.02781248092651, 0, -0.37406250834465], [0.189999997615814, 0, 1.07718753814697], [0, -0.46875, 0], [0.837812483310699, 0, -0.703125], [1.02781248092651, 0, -0.37406250834465], [0, -0.46875, 0], [-0.837812483310699, 0, -0.703125], [0.837812483310699, 0, -0.703125], [0, -0.46875, 0], [-1.02781248092651, 0, -0.37406250834465], [-0.837812483310699, 0, -0.703125], [0, -0.46875, 0], [-0.189999997615814, 0, 1.07718753814697], [-1.02781248092651, 0, -0.37406250834465], [0, -0.46875, 0]], [[0, 1, 2, 200, 200, 200], [3, 4, 5, 200, 200, 200], [6, 7, 8, 200, 200, 200], [9, 10, 11, 50, 50, 200], [12, 13, 14, 50, 50, 200], [15, 16, 17, 50, 50, 200], [18, 19, 20, 50, 50, 200], [21, 22, 23, 50, 50, 200], [24, 25, 26, 50, 50, 200], [27, 28, 29, 200, 50, 200], [30, 31, 32, 250, 150, 0], [33, 34, 35, 200, 200, 0], [36, 37, 38, 250, 150, 0], [39, 40, 41, 200, 200, 0], [42, 43, 44, 250, 150, 0], [45, 46, 47, 200, 200, 0]])]),
			new Model('Seeder', [new Mesh([[0, 0.625, 0], [0.883750021457672, 0, 0.883750021457672], [1.25, 0, 0], [0, 0.625, 0], [0.883750021457672, 0, -0.883750021457672], [0, 0, -1.25], [0, 0.625, 0], [-0.883750021457672, 0, -0.883750021457672], [-1.25, 0, 0], [0, 0.625, 0], [-0.883750021457672, 0, 0.883750021457672], [0, 0, 1.25], [0, 0.625, 0], [1.25, 0, 0], [0.883750021457672, 0, -0.883750021457672], [0, 0.625, 0], [0, 0, -1.25], [-0.883750021457672, 0, -0.883750021457672], [0, 0.625, 0], [-1.25, 0, 0], [-0.883750021457672, 0, 0.883750021457672], [0, 0.625, 0], [0, 0, 1.25], [0.883750021457672, 0, 0.883750021457672], [0, -0.625, 0], [0.883750021457672, 0, -0.883750021457672], [1.25, 0, 0], [0, -0.625, 0], [-0.883750021457672, 0, -0.883750021457672], [0, 0, -1.25], [0, -0.625, 0], [-0.883750021457672, 0, 0.883750021457672], [-1.25, 0, 0], [0, -0.625, 0], [0.883750021457672, 0, 0.883750021457672], [0, 0, 1.25], [0, -0.625, 0], [1.25, 0, 0], [0.883750021457672, 0, 0.883750021457672], [0, -0.625, 0], [0, 0, -1.25], [0.883750021457672, 0, -0.883750021457672], [0, -0.625, 0], [-1.25, 0, 0], [-0.883750021457672, 0, -0.883750021457672], [0, -0.625, 0], [0, 0, 1.25], [-0.883750021457672, 0, 0.883750021457672]], [[0, 1, 2, 0, 200, 200], [3, 4, 5, 0, 200, 200], [6, 7, 8, 0, 200, 200], [9, 10, 11, 0, 200, 200], [12, 13, 14, 0, 100, 200], [15, 16, 17, 0, 100, 200], [18, 19, 20, 0, 100, 200], [21, 22, 23, 0, 100, 200], [24, 25, 26, 0, 100, 100], [27, 28, 29, 0, 100, 100], [30, 31, 32, 0, 100, 100], [33, 34, 35, 0, 100, 100], [36, 37, 38, 0, 50, 100], [39, 40, 41, 0, 50, 100], [42, 43, 44, 0, 50, 100], [45, 46, 47, 0, 50, 100]])]),
			new Model('Spore', [new Mesh([[0, 0, 0.25], [0.25, 0.25, -0.25], [-0.25, 0.25, -0.25], [-0.25, -0.25, -0.25], [0.25, -0.25, -0.25], [0, 0, 0.25], [0.25, 0.25, -0.25], [0, 0, 0.25], [0.25, -0.25, -0.25], [-0.25, -0.25, -0.25], [0, 0, 0.25], [-0.25, 0.25, -0.25], [-0.25, 0.25, -0.25], [0.25, 0.25, -0.25], [0.25, -0.25, -0.25], [0.25, -0.25, -0.25], [-0.25, -0.25, -0.25], [-0.25, 0.25, -0.25]], [[0, 1, 2, 200, 50, 50], [3, 4, 5, 200, 50, 50], [6, 7, 8, 200, 200, 200], [9, 10, 11, 200, 200, 200], [12, 13, 14, 200, 50, 50], [15, 16, 17, 200, 200, 200]])]),
			new Model('Bush', [new Mesh([[0.1875, 0, 0], [0.3125, 0.9375, 0.5625], [-0.09375, 0, 0.1875], [-0.09375, 0, -0.1875], [0.3125, 0.9375, -0.5625], [0.1875, 0, 0], [-0.625, 0.9375, 0], [-0.09375, 0, -0.1875], [-0.09375, 0, 0.1875]], [[0, 1, 2, 100, 200, 75], [2, 1, 0, 100, 200, 75], [3, 4, 5, 80, 200, 90], [5, 4, 3, 80, 200, 90], [6, 7, 8, 140, 200, 60], [8, 7, 6, 140, 200, 60]])]),
			new Model('Crate', [new Mesh([[-0.3125, 0.625, 0.3125], [0.3125, 0.625, 0.3125], [0.3125, 0.625, -0.3125], [0.3125, 0.625, -0.3125], [-0.3125, 0.625, -0.3125], [-0.3125, 0.625, 0.3125], [0.3125, 0.625, -0.3125], [0.3125, 0.625, 0.3125], [0.3125, 0, 0.3125], [0.3125, 0, 0.3125], [0.3125, 0, -0.3125], [0.3125, 0.625, -0.3125], [-0.3125, 0.625, 0.3125], [-0.3125, 0.625, -0.3125], [-0.3125, 0, -0.3125], [-0.3125, 0, -0.3125], [-0.3125, 0, 0.3125], [-0.3125, 0.625, 0.3125], [0.3125, 0.625, 0.3125], [-0.3125, 0.625, 0.3125], [-0.3125, 0, 0.3125], [-0.3125, 0, 0.3125], [0.3125, 0, 0.3125], [0.3125, 0.625, 0.3125], [-0.3125, 0.625, -0.3125], [0.3125, 0.625, -0.3125], [0.3125, 0, -0.3125], [0.3125, 0, -0.3125], [-0.3125, 0, -0.3125], [-0.3125, 0.625, -0.3125]], [[0, 1, 2, 200, 100, 0], [3, 4, 5, 200, 100, 0], [6, 7, 8, 200, 200, 0], [9, 10, 11, 200, 200, 0], [12, 13, 14, 200, 200, 0], [15, 16, 17, 200, 200, 0], [18, 19, 20, 250, 150, 0], [21, 22, 23, 250, 150, 0], [24, 25, 26, 250, 150, 0], [27, 28, 29, 250, 150, 0]])]),
			new Model('House1', [new Mesh([[0.625, 0.46875, -0.3125], [0.625, 0.9375, 0], [0.625, 0.46875, 0.3125], [0.625, 0.46875, 0.3125], [0.625, 0, 0.3125], [0.625, 0, -0.3125], [0.625, 0, -0.3125], [0.625, 0.46875, -0.3125], [0.625, 0.46875, 0.3125], [-0.625, 0.46875, 0.3125], [-0.625, 0.9375, 0], [-0.625, 0.46875, -0.3125], [-0.625, 0, -0.3125], [-0.625, 0, 0.3125], [-0.625, 0.46875, 0.3125], [-0.625, 0.46875, 0.3125], [-0.625, 0.46875, -0.3125], [-0.625, 0, -0.3125], [-0.625, 0.46875, -0.3125], [0.625, 0.46875, -0.3125], [0.625, 0, -0.3125], [0.625, 0, -0.3125], [-0.625, 0, -0.3125], [-0.625, 0.46875, -0.3125], [0.625, 0.46875, 0.3125], [-0.625, 0.46875, 0.3125], [-0.625, 0, 0.3125], [-0.625, 0, 0.3125], [0.625, 0, 0.3125], [0.625, 0.46875, 0.3125], [-0.625, 0.9375, 0], [0.625, 0.9375, 0], [0.625, 0.46875, -0.3125], [0.625, 0.46875, -0.3125], [-0.625, 0.46875, -0.3125], [-0.625, 0.9375, 0], [0.625, 0.9375, 0], [-0.625, 0.9375, 0], [-0.625, 0.46875, 0.3125], [-0.625, 0.46875, 0.3125], [0.625, 0.46875, 0.3125], [0.625, 0.9375, 0]], [[0, 1, 2, 100, 100, 100], [3, 4, 5, 100, 100, 100], [6, 7, 8, 100, 100, 100], [9, 10, 11, 100, 100, 100], [12, 13, 14, 100, 100, 100], [15, 16, 17, 100, 100, 100], [18, 19, 20, 150, 150, 150], [21, 22, 23, 150, 150, 150], [24, 25, 26, 150, 150, 150], [27, 28, 29, 150, 150, 150], [30, 31, 32, 200, 50, 50], [33, 34, 35, 200, 50, 50], [36, 37, 38, 170, 65, 65], [39, 40, 41, 170, 65, 65]])]),
			new Model('House2', [new Mesh([[-0.4375, 0.625, -0.4375], [0.4375, 0.625, -0.4375], [0.4375, 0, -0.4375], [0.4375, 0, -0.4375], [-0.4375, 0, -0.4375], [-0.4375, 0.625, -0.4375], [0.4375, 0.625, 0.4375], [-0.4375, 0.625, 0.4375], [-0.4375, 0, 0.4375], [-0.4375, 0, 0.4375], [0.4375, 0, 0.4375], [0.4375, 0.625, 0.4375], [0.4375, 0.625, -0.4375], [0.4375, 0.625, 0.4375], [0.4375, 0, 0.4375], [0.4375, 0, 0.4375], [0.4375, 0, -0.4375], [0.4375, 0.625, -0.4375], [-0.4375, 0.625, 0.4375], [-0.4375, 0.625, -0.4375], [-0.4375, 0, -0.4375], [-0.4375, 0, -0.4375], [-0.4375, 0, 0.4375], [-0.4375, 0.625, 0.4375], [0, 0.9375, 0], [-0.4375, 0.625, 0.4375], [0.4375, 0.625, 0.4375], [0, 0.9375, 0], [0.4375, 0.625, -0.4375], [-0.4375, 0.625, -0.4375], [-0.4375, 0.625, 0.4375], [0, 0.9375, 0], [-0.4375, 0.625, -0.4375], [0.4375, 0.625, -0.4375], [0, 0.9375, 0], [0.4375, 0.625, 0.4375]], [[0, 1, 2, 100, 100, 100], [3, 4, 5, 100, 100, 100], [6, 7, 8, 100, 100, 100], [9, 10, 11, 100, 100, 100], [12, 13, 14, 150, 150, 150], [15, 16, 17, 150, 150, 150], [18, 19, 20, 150, 150, 150], [21, 22, 23, 150, 150, 150], [24, 25, 26, 200, 50, 50], [27, 28, 29, 200, 50, 50], [30, 31, 32, 170, 65, 65], [33, 34, 35, 170, 65, 65]])]),
			new Model('House3', [new Mesh([[0, 1.25, 0], [-0.5, 0.8125, 0.5], [0.5, 0.8125, 0.5], [0, 1.25, 0], [0.5, 0.8125, -0.5], [-0.5, 0.8125, -0.5], [0, 1.25, 0], [0.5, 0.8125, 0.5], [0.5, 0.8125, -0.5], [0, 1.25, 0], [-0.5, 0.8125, -0.5], [-0.5, 0.8125, 0.5], [-0.5, 0.8125, 0.5], [-0.5625, 0, 0.5], [-0.5, 0, 0.5625], [0.5, 0.8125, 0.5], [0.5, 0, 0.5625], [0.5625, 0, 0.5], [0.5, 0.8125, -0.5], [0.5625, 0, -0.5], [0.5, 0, -0.5625], [-0.5, 0.8125, -0.5], [-0.5, 0, -0.5625], [-0.5625, 0, -0.5]], [[0, 1, 2, 200, 200, 0], [3, 4, 5, 200, 200, 0], [6, 7, 8, 0, 200, 200], [9, 10, 11, 0, 200, 200], [12, 13, 14, 200, 200, 200], [14, 13, 12, 200, 200, 200], [15, 16, 17, 200, 200, 200], [17, 16, 15, 200, 200, 200], [18, 19, 20, 200, 200, 200], [20, 19, 18, 200, 200, 200], [21, 22, 23, 200, 200, 200], [23, 22, 21, 200, 200, 200]])]),
			new Model('Mill', [
				new Mesh([[0, 1.25, 0], [0, 0, 0.25], [0.25, 0, 0], [0, 1.25, 0], [0, 0, -0.25], [-0.25, 0, 0], [0, 1.25, 0], [0.25, 0, 0], [0, 0, -0.25], [0, 1.25, 0], [-0.25, 0, 0], [0, 0, 0.25]], [[0, 1, 2, 200, 200, 0], [3, 4, 5, 200, 200, 0], [6, 7, 8, 150, 150, 0], [9, 10, 11, 150, 150, 0]]),
				new Mesh([[0, 0.25, 0], [0.25, 0, 0], [0, 0, -0.375], [0, 0.25, 0], [0, 0, -0.375], [-0.25, 0, 0], [0, -0.25, 0], [0, 0, -0.375], [0.25, 0, 0], [0, -0.25, 0], [-0.25, 0, 0], [0, 0, -0.375], [0, -0.25, 0], [0, 0, 0.375], [-0.25, 0, 0], [0, 0, 0.375], [0.25, 0, 0], [0, 0.25, 0], [0, 0, 0.375], [0, 0.25, 0], [-0.25, 0, 0], [0, -0.25, 0], [0.25, 0, 0], [0, 0, 0.375], [0, 0, 0.375], [0.25, 1, 0.5], [-0.25, 1, 0.25], [0, 0, 0.375], [1, -0.25, 0.5], [1, 0.25, 0.25], [0.25, -1, 0.25], [-0.25, -1, 0.5], [0, 0, 0.375], [-1, -0.25, 0.25], [-1, 0.25, 0.5], [0, 0, 0.375]], [[0, 1, 2, 200, 200, 0], [3, 4, 5, 150, 150, 0], [6, 7, 8, 150, 150, 0], [9, 10, 11, 200, 200, 0], [12, 13, 14, 200, 200, 0], [15, 16, 17, 200, 200, 0], [18, 19, 20, 150, 150, 0], [21, 22, 23, 150, 150, 0], [24, 25, 26, 100, 100, 100], [26, 25, 24, 100, 100, 100], [27, 28, 29, 150, 150, 150], [29, 28, 27, 150, 150, 150], [30, 31, 32, 100, 100, 100], [32, 31, 30, 100, 100, 100], [33, 34, 35, 150, 150, 150], [35, 34, 33, 150, 150, 150]])
			]),
			new Model('Radar', [
				new Mesh([[0, 2.25, 0], [0, 0, 0.5], [0.5, 0, 0], [0, 2.25, 0], [0, 0, -0.5], [-0.5, 0, 0], [0, 2.25, 0], [0.5, 0, 0], [0, 0, -0.5], [0, 2.25, 0], [-0.5, 0, 0], [0, 0, 0.5]], [[0, 1, 2, 0, 200, 200], [3, 4, 5, 0, 200, 200], [6, 7, 8, 0, 150, 150], [9, 10, 11, 0, 150, 150]]),
				new Mesh([[0, 2.25, 0], [0, 1.875, -0.9375], [-1.40625, 1.875, 0.5], [0, 2.25, 0], [1.40625, 1.875, 0.5], [0, 1.875, -0.9375], [0, 2.25, 0], [0, 1.5, 0], [1.40625, 1.875, 0.5], [0, 2.25, 0], [-1.40625, 1.875, 0.5], [0, 1.5, 0], [0, 1.5, 0], [-1.40625, 1.875, 0.5], [0, 1.875, -0.9375], [0, 1.5, 0], [0, 1.875, -0.9375], [1.40625, 1.875, 0.5]], [[0, 1, 2, 200, 200, 200], [3, 4, 5, 150, 150, 150], [6, 7, 8, 200, 200, 200], [9, 10, 11, 150, 150, 150], [12, 13, 14, 100, 100, 100], [15, 16, 17, 100, 100, 100]])
			]),
			new Model('Rocket', [new Mesh([[0, 2.5, 0], [0.265165030956268, 0.25, -0.265165030956268], [0.265165030956268, 0.25, 0.265165030956268], [0, 2.5, 0], [0.265165030956268, 0.25, 0.265165030956268], [-0.265165060758591, 0.25, 0.265165001153946], [0, 2.5, 0], [-0.265165060758591, 0.25, 0.265165001153946], [-0.265165030956268, 0.25, -0.265165030956268], [0, 2.5, 0], [-0.265165030956268, 0.25, -0.265165030956268], [0.265165090560913, 0.25, -0.265164971351624], [0.132582515478134, 1.25, -0.132582515478134], [0.265165030956268, 0.25, -0.265165030956268], [0.530330061912537, 0, -0.530330061912537], [0.132582515478134, 1.25, 0.132582515478134], [0.265165030956268, 0.25, 0.265165030956268], [0.530330061912537, 0, 0.530330061912537], [-0.132582530379295, 1.25, 0.132582500576973], [-0.265165060758591, 0.25, 0.265165001153946], [-0.530330121517181, 0, 0.530330002307892], [-0.132582515478134, 1.25, -0.132582515478134], [-0.265165030956268, 0.25, -0.265165030956268], [-0.530330061912537, 0, -0.530330061912537]], [[2, 1, 0, 150, 37, 37], [5, 4, 3, 200, 50, 50], [8, 7, 6, 150, 37, 37], [11, 10, 9, 200, 50, 50], [12, 13, 14, 150, 150, 0], [14, 13, 12, 150, 150, 0], [15, 16, 17, 200, 200, 0], [17, 16, 15, 200, 200, 0], [18, 19, 20, 150, 150, 0], [20, 19, 18, 150, 150, 0], [21, 22, 23, 200, 200, 0], [23, 22, 21, 200, 200, 0]])]),
			new Model('Tree1', [new Mesh([[-0.25, 0, 0], [0.125, 0, 0.21875], [0, 1.25, 0], [0.125, 0, -0.21875], [-0.25, 0, 0], [0, 1.25, 0], [0.125, 0, 0.21875], [0.125, 0, -0.21875], [0, 1.25, 0], [-0.3125, 0.5, 0.541249990463257], [0.625, 0.5, 0], [0, 2.5, 0], [-0.3125, 0.5, -0.541249990463257], [-0.3125, 0.5, 0.541249990463257], [0, 2.5, 0], [0.625, 0.5, 0], [-0.3125, 0.5, -0.541249990463257], [0, 2.5, 0]], [[0, 1, 2, 80, 50, 30], [3, 4, 5, 80, 50, 30], [6, 7, 8, 80, 50, 30], [9, 10, 11, 100, 200, 80], [12, 13, 14, 125, 240, 70], [15, 16, 17, 70, 230, 90]])]),
			new Model('Tree2', [new Mesh([[0, 2.8125, 0], [0.1875, 0, 0], [-0.0937500074505806, 0, 0.162379756569862], [-0.0937499776482582, 0, -0.162379771471024], [0, 2.8125, 0], [0.625, 2.15625, 0], [0.478777796030045, 2.15625, 0.401742249727249], [0, 2.4375, 0], [-0.312500029802322, 1.78125, 0.541265845298767], [-0.587307870388031, 1.78125, 0.213762640953064], [0, 2.0625, 0], [-0.312499940395355, 1.40625, -0.541265904903412], [0.108530096709728, 1.40625, -0.615504860877991], [0, 1.875, 0], [0.312499970197678, 1.21875, 0.541265904903412], [-0.10853011906147, 1.21875, 0.615504860877991], [0, 1.5, 0], [-0.625, 0.84375, -5.46392371347793E-08], [-0.478777796030045, 0.84375, -0.401742219924927], [0, 1.125, 0], [0.312499940395355, 0.46875, -0.541265904903412], [0.587307810783386, 0.46875, -0.213762730360031]], [[2, 1, 0, 80, 50, 30], [3, 2, 0, 80, 50, 30], [1, 3, 0, 80, 50, 30], [6, 5, 4, 90, 169, 79], [4, 5, 6, 90, 169, 79], [9, 8, 7, 89, 151, 61], [7, 8, 9, 89, 151, 61], [12, 11, 10, 104, 246, 79], [10, 11, 12, 104, 246, 79], [15, 14, 13, 142, 167, 66], [13, 14, 15, 142, 167, 66], [18, 17, 16, 52, 154, 67], [16, 17, 18, 52, 154, 67], [21, 20, 19, 82, 204, 50], [19, 20, 21, 82, 204, 50]])]),
			new Model('Tree3', [new Mesh([[-0.25, 0, 0], [0.125, 0, 0.21875], [0, 2.5, 0], [0.125, 0, -0.21875], [-0.25, 0, 0], [0, 2.5, 0], [0.125, 0, 0.21875], [0.125, 0, -0.21875], [0, 2.5, 0], [0, 2.5, 0], [-0.25, 1.625, 0.625], [0.25, 1.25, 0.625], [0, 2.5, 0], [0.625, 1.625, 0.25], [0.625, 1.625, -0.25], [0, 2.5, 0], [0.25, 1.25, -0.625], [-0.25, 1.625, -0.625], [0, 2.5, 0], [-0.625, 1.625, -0.25], [-0.625, 1.625, 0.25]], [[0, 1, 2, 80, 50, 30], [3, 4, 5, 80, 50, 30], [6, 7, 8, 80, 50, 30], [9, 10, 11, 100, 180, 80], [11, 10, 9, 100, 180, 80], [12, 13, 14, 140, 220, 70], [14, 13, 12, 140, 220, 70], [15, 16, 17, 120, 200, 90], [17, 16, 15, 120, 200, 90], [18, 19, 20, 160, 240, 100], [20, 19, 18, 160, 240, 100]])]),
		];

		Models._mapModels = {};
		for (let iModel = rgModels.length; iModel--;) {
			const model = rgModels[iModel];
			Models._mapModels[model.Name] = model;
		}

	})();

	static GetModel(name: string): Model {
		console.assert(!!Models._mapModels[name]);
		return Models._mapModels[name];
	}
}


abstract class BaseModel {
	public Model: Model;

	constructor(modelName: string) {
		this.Model = Models.GetModel(modelName);
	}

	Draw(matView: Mat4, pos: Vec3, rot: Mat4, alpha: number) {
		this.Model.Draw(matView, pos, rot, alpha);
	}
}
